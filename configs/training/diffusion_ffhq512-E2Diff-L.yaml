trainer:
  target: trainer.TrainerDiffusionFace

model:
  target: models.unet.UNetModel
  params:
    image_size: 512
    in_channels: 3
    model_channels: 32
    out_channels: 6
    attention_resolutions: [32, 16, 8]
    dropout: 0
    channel_mult: [ 1, 2, 4, 4, 4, 8, 8 ]  # lightweight
    num_res_blocks: [ 1, 1, 1, 1, 1, 1, 2 ] # lightweight
    conv_resample: True
    dims: 2
    use_fp16: False
    num_head_channels: 64
    use_scale_shift_norm: True
    resblock_updown: False
    use_new_attention_order: False

diffusion:
  target: models.script_util.create_gaussian_diffusion
  params:
    steps: 1000
    learn_sigma: True
    sigma_small: False
    noise_schedule: linear
    use_kl: False
    predict_xstart: False
    rescale_timesteps: False
    rescale_learned_sigmas: True
    timestep_respacing: ""

data:
  train:
    type: folder
    params:
      dir_path: data/FFHQ/images512x512
      transform_type: default
      transform_kwargs:
        mean: 0.5
        std: 0.5
      dir_path_extra: ~
      length: ~
      need_path: False
      im_exts: png
      recursive: False

train:
  lr: 1e-4
  batch: [64, 4]   # batchsize for training and validation
  microbatch: 8
  use_fp16: False
  num_workers: 4
  prefetch_factor: 2
  iterations: 800000
  weight_decay: 0
  milestones: [10000, 800000]
  save_freq: 10000
  val_freq: ${train.save_freq}
  log_freq: [1000, 2000]
  ema_rate: 0.999
  tf_logging: False
  local_logging: True

